<ehcache>

	<!-- Sets the path to the directory where cache .data files are created. 
		If the path is a Java System Property it is replaced by its value in the 
		running VM. The following properties are translated: user.home - User's home 
		directory user.dir - User's current working directory java.io.tmpdir - Default 
		temp file path -->
	<diskStore path="java.io.tmpdir" />




	<!--Default Cache configuration. These will applied to caches programmatically 
		created through the CacheManager. The following attributes are required for 
		defaultCache: 内存中最大缓存对象数 - Sets the maximum number of objects that will be 
		created in memory eternal - Sets whether elements are eternal. If eternal, 
		timeouts are ignored and the element is never expired. timeToIdleSeconds 
		- Sets the time to idle for an element before it expires. Is only used if 
		the element is not eternal. Idle time is now - last accessed time timeToLiveSeconds 
		- Sets the time to live for an element before it expires. Is only used if 
		the element is not eternal. TTL is now - creation time overflowToDisk - Sets 
		whether elements can overflow to disk when the in-memory cache has reached 
		the maxInMemory limit. maxElementsInMemory 内存中最大缓存对象数 eternal true/false 
		true表示对象永不过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false timeToIdleSeconds： 
		设定允许对象处于空闲状态的最长时间，以秒为单位。 timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位 overflowToDisk：true表示当内存缓存的对象数目达到了maxElementsInMemory界限后，会把溢出的对象写到硬盘缓存中。 
		注意：如果缓存的对象要写入到硬盘中的话，则该对象必须实现了Serializable接口才行。 -->
	<!-- 默认缓存 -->
	<defaultCache maxElementsInMemory="10000" eternal="false"
		timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true"
		memoryStoreEvictionPolicy = "LFU" 
		 />

	<!--Predefined caches. Add your cache configuration settings here. If you 
		do not have a configuration for your cache a WARNING will be issued when 
		the CacheManager starts The following attributes are required for defaultCache: 
		name - Sets the name of the cache. This is used to identify the cache. It 
		must be unique. maxInMemory - Sets the maximum number of objects that will 
		be created in memory eternal - Sets whether elements are eternal. If eternal, 
		timeouts are ignored and the element is never expired. timeToIdleSeconds 
		- Sets the time to idle for an element before it expires. Is only used if 
		the element is not eternal. Idle time is now - last accessed time timeToLiveSeconds 
		- Sets the time to live for an element before it expires. Is only used if 
		the element is not eternal. TTL is now - creation time overflowToDisk - Sets 
		whether elements can overflow to disk when the in-memory cache has reached 
		the maxInMemory limit. -->

	<!-- Sample cache named sampleCache1 This cache contains a maximum in memory 
		of 10000 elements, and will expire an element if it is idle for more than 
		5 minutes and lives for more than 10 minutes. If there are more than 10000 
		elements it will overflow to the disk cache, which in this configuration 
		will go to wherever java.io.tmp is defined on your system. On a standard 
		Linux system this will be /tmp" -->
	<cache name="sampleCache1" maxElementsInMemory="10000" eternal="false"
		timeToIdleSeconds="300" timeToLiveSeconds="600" overflowToDisk="true" />

	<!-- Sample cache named sampleCache2 This cache contains 1000 elements. 
		Elements will always be held in memory. They are not expired. -->
	<cache name="sampleCache2" maxElementsInMemory="1000" eternal="true"
		timeToIdleSeconds="0" timeToLiveSeconds="0" overflowToDisk="false"  />
	-->

	<!-- Place configuration for your caches following -->

</ehcache>
